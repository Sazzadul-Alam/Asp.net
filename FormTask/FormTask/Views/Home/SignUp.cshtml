
@{
    ViewBag.Title = "SignUp";
}

<h2>SignUp</h2>

@{
    bool CheckGender(string gn)
    {
        if (Model != null && Model.Gender != null && Model.Gender.Equals(gn))
        {
            return true;
        }
        return false;
    }

    bool CheckProfession(string prof)
    {
        if (Model != null && Model.Profession != null)
        {
            foreach (var p in Model.Profession)
            {
                if (p.Equals(prof)) return true;
            }
        }
        return false;
    }
}
@{
    string formatPattern = @"\d{2}-\d{5}-\d{1}";
    string submittedValue = Request.Form["formatInput"];
    bool isValidFormat = !string.IsNullOrEmpty(submittedValue) && System.Text.RegularExpressions.Regex.IsMatch(submittedValue, formatPattern);
    if (isValidFormat)
    {

    }
}


<form method="post">
    Name:<input type="text" name="Name" class="form-control" value="@(Model != null ? Model.Name :"" )" maxlength="100" placeholder="Name" />
    <span class="text-danger">@Html.ValidationMessage("Name")</span>
    <br />
    User Name:<input type="text" name="Username" value="@(Model != null ? Model.Username : "" )" class="form-control" placeholder="Username" />
    <span class="text-danger">@Html.ValidationMessage("Username")</span>

    11710
    <br>Gender: <input type="radio" checked="@CheckGender("Male")" name="Gender" value="Male" /> Male
    <input type="radio" name="Gender" checked="@CheckGender("Female")" value="Female" /> Female </br>
    <span class="text-danger">@Html.ValidationMessage("Gender")</span>
    <br />Profession:
    <input type="checkbox" checked="@CheckProfession("Tester")" name="Profession[]" value="Tester" />Tester
    <input type="checkbox" checked="@CheckProfession("Developer")" name="Profession[]" value="Developer" />Developer
    <input type="checkbox" checked="@CheckProfession("Ui/Ux")" name="Profession[]" value="Ui/Ux" />Ui/Ux
    <input type="checkbox" checked="@CheckProfession("Admin")" name="Profession[]" value="Admin" />Admin
    <br />
    <span class="text-danger">@Html.ValidationMessage("Profession")</span>

    <br />
    Dob: <input type="date" name="Dob" value="@(Model != null ? Model.Dob.Date.ToString("yyyy-MM-dd") : "")" />
    <br />
    <span class="text-danger">@Html.ValidationMessage("Dob")</span>

    <br />

    <label for="StudentId">Student Id</label>
    <input type="text" id="StudentId" name="StudentId" pattern="^\d{2}-\d{5}-\d{1}$" required />
    <br />
    
    <span class="text-danger">@Html.ValidationMessage("StudentId")</span> 
    <br />
    Email:<input type="email" name="email" id="email" placeholder="Enter your email address" />
    <br>
    @Html.ValidationMessage("Email")
    <br />
    <input type="submit" class="btn btn-success" />

</form>